// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CDK stack snapshot test 1`] = `
RegularExamStack {
  "_crossRegionReferences": false,
  "_logicalIds": LogicalIDs {
    "renames": {},
    "reverse": {},
  },
  "_missingContext": [],
  "_notificationArns": [],
  "_stackDependencies": {},
  "_stackName": "ApplicationStack",
  "_suppressTemplateIndentation": false,
  "_terminationProtection": false,
  "_versionReportingEnabled": undefined,
  "account": "\${Token[AWS.AccountId.7]}",
  "artifactId": "ApplicationStack",
  "environment": "aws://unknown-account/unknown-region",
  "node": Node {
    "_children": {
      "imageUploadFunction": NodejsFunction {
        "_allowCrossEnvironment": false,
        "_architecture": undefined,
        "_functionUrlInvocationGrants": {},
        "_invocationGrants": {},
        "_layers": [],
        "_logGroup": undefined,
        "_physicalName": undefined,
        "_warnIfCurrentVersionCalled": false,
        "architecture": Architecture {
          "dockerPlatform": "linux/amd64",
          "name": "x86_64",
        },
        "canCreatePermissions": true,
        "currentVersionOptions": undefined,
        "env": {
          "account": "\${Token[AWS.AccountId.7]}",
          "region": "\${Token[AWS.Region.11]}",
        },
        "environment": {},
        "functionArn": "\${Token[TOKEN.38]}",
        "functionName": "\${Token[TOKEN.37]}",
        "grantPrincipal": Role {
          "_allowCrossEnvironment": false,
          "_didSplit": false,
          "_physicalName": undefined,
          "_roleId": "\${Token[TOKEN.22]}",
          "assumeRoleAction": "sts:AssumeRole",
          "assumeRolePolicy": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "\${Token[lambda.amazonaws.com.17]}",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "attachedPolicies": AttachedPolicies {
            "policies": [],
          },
          "dependables": Map {},
          "env": {
            "account": "\${Token[AWS.AccountId.7]}",
            "region": "\${Token[AWS.Region.11]}",
          },
          "grantPrincipal": [Circular],
          "inlinePolicies": {},
          "managedPolicies": [
            AwsManagedPolicy {
              "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            },
          ],
          "node": Node {
            "_children": {
              "ImportServiceRole": ImportedRole {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "assumeRoleAction": "sts:AssumeRole",
                "attachedPolicies": AttachedPolicies {
                  "policies": [],
                },
                "defaultPolicyName": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.7]}",
                  "region": "\${Token[AWS.Region.11]}",
                },
                "grantPrincipal": [Circular],
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "ImportServiceRole",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.18]}",
                "policyFragment": PrincipalPolicyFragment {
                  "conditions": {},
                  "principalJson": {
                    "AWS": [
                      "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                    ],
                  },
                },
                "principalAccount": "\${Token[AWS.AccountId.7]}",
                "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                "roleName": "ServiceRole",
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "Resource": CfnRole {
                "_cfnProperties": {
                  "assumeRolePolicyDocument": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.17]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "description": undefined,
                  "managedPolicyArns": [
                    "#{Token[TOKEN.19]}",
                  ],
                  "maxSessionDuration": undefined,
                  "path": undefined,
                  "permissionsBoundary": undefined,
                  "policies": undefined,
                  "roleName": "\${Token[TOKEN.16]}",
                },
                "assumeRolePolicyDocument": {
                  "Statement": [
                    {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "\${Token[lambda.amazonaws.com.17]}",
                      },
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "attrArn": "\${Token[TOKEN.21]}",
                "attrRoleId": "\${Token[TOKEN.22]}",
                "cfnOptions": {},
                "cfnResourceType": "AWS::IAM::Role",
                "dependsOn": Set {},
                "description": undefined,
                "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                "managedPolicyArns": [
                  "#{Token[TOKEN.19]}",
                ],
                "maxSessionDuration": undefined,
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [
                    {
                      "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                      "trace": undefined,
                      "type": "aws:cdk:logicalId",
                    },
                  ],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Resource",
                  "scope": [Circular],
                },
                "path": undefined,
                "permissionsBoundary": undefined,
                "policies": undefined,
                "rawOverrides": {},
                "roleName": "\${Token[TOKEN.16]}",
                "stack": [Circular],
                "tags": TagManager {
                  "didHaveInitialTags": false,
                  "externalTagPriority": 50,
                  "priorities": Map {},
                  "renderedTags": "<unresolved-lazy>",
                  "resourceTypeName": "AWS::IAM::Role",
                  "tagFormatter": StandardFormatter {},
                  "tagPropertyName": "tags",
                  "tags": Map {},
                },
                "tagsRaw": undefined,
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
            },
            "_context": {},
            "_dependencies": Set {},
            "_locked": false,
            "_metadata": [],
            "_validations": [
              {
                "validate": [Function],
              },
            ],
            "host": [Circular],
            "id": "ServiceRole",
            "scope": [Circular],
          },
          "permissionsBoundary": undefined,
          "physicalName": "\${Token[TOKEN.16]}",
          "policyFragment": PrincipalPolicyFragment {
            "conditions": {},
            "principalJson": {
              "AWS": [
                "\${Token[TOKEN.23]}",
              ],
            },
          },
          "principalAccount": "\${Token[AWS.AccountId.7]}",
          "roleArn": "\${Token[TOKEN.23]}",
          "roleName": "\${Token[TOKEN.25]}",
          "stack": [Circular],
          Symbol(@aws-cdk/core.DependableTrait): {
            "dependencyRoots": [
              [Circular],
            ],
          },
        },
        "hashMixins": [],
        "node": Node {
          "_children": {
            "Code": Asset {
              "assetHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              "assetPath": "asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              "bucket": Import {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "autoCreatePolicy": false,
                "bucketArn": "arn:\${Token[AWS.Partition.10]}:s3:::\${Token[TOKEN.27]}",
                "bucketDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.URLSuffix.8]}",
                "bucketDualStackDomainName": "\${Token[TOKEN.27]}.s3.dualstack.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                "bucketName": "\${Token[TOKEN.27]}",
                "bucketRegionalDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                "bucketWebsiteDomainName": "\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                "bucketWebsiteNewUrlFormat": false,
                "bucketWebsiteUrl": "http://\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                "disallowPublicAccess": false,
                "encryptionKey": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.7]}",
                  "region": "\${Token[AWS.Region.11]}",
                },
                "isWebsite": false,
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "AssetBucket",
                  "scope": [Circular],
                },
                "notificationsHandlerRole": undefined,
                "physicalName": "\${Token[TOKEN.30]}",
                "policy": undefined,
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "httpUrl": "\${Token[TOKEN.26]}",
              "isBundled": true,
              "isFile": false,
              "isZipArchive": true,
              "node": Node {
                "_children": {
                  "AssetBucket": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "autoCreatePolicy": false,
                    "bucketArn": "arn:\${Token[AWS.Partition.10]}:s3:::\${Token[TOKEN.27]}",
                    "bucketDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.URLSuffix.8]}",
                    "bucketDualStackDomainName": "\${Token[TOKEN.27]}.s3.dualstack.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                    "bucketName": "\${Token[TOKEN.27]}",
                    "bucketRegionalDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                    "bucketWebsiteDomainName": "\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                    "bucketWebsiteNewUrlFormat": false,
                    "bucketWebsiteUrl": "http://\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                    "disallowPublicAccess": false,
                    "encryptionKey": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "isWebsite": false,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "AssetBucket",
                      "scope": [Circular],
                    },
                    "notificationsHandlerRole": undefined,
                    "physicalName": "\${Token[TOKEN.30]}",
                    "policy": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Stage": AssetStaging {
                    "absoluteStagedPath": "/tmp/cdk.outdmAD4U/asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    "assetHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    "assetOutdir": "/tmp/cdk.outdmAD4U",
                    "cacheKey": "d2ba75308608f5a80c4ce2d53d5a0551ba30e157e20641a8f665319255f3e856",
                    "customSourceFingerprint": undefined,
                    "fingerprintOptions": {
                      "assetHash": undefined,
                      "assetHashType": "output",
                      "bundling": Bundling {
                        "bundlingFileAccess": undefined,
                        "command": [
                          "bash",
                          "-c",
                          "esbuild --bundle "/asset-input/src/imageUploadFunction.ts" --target=node20 --platform=node --outfile="/asset-output/index.js" --external:@aws-sdk/*",
                        ],
                        "entrypoint": undefined,
                        "environment": undefined,
                        "externals": [
                          "@aws-sdk/*",
                        ],
                        "image": "dummy",
                        "local": {
                          "tryBundle": [Function],
                        },
                        "network": undefined,
                        "packageManager": PackageManager {
                          "argsSeparator": undefined,
                          "installCommand": [
                            "npm",
                            "ci",
                          ],
                          "lockFile": "package-lock.json",
                          "runCommand": [
                            "npx",
                            "--no-install",
                          ],
                        },
                        "projectRoot": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                        "props": {
                          "architecture": Architecture {
                            "dockerPlatform": "linux/amd64",
                            "name": "x86_64",
                          },
                          "depsLockFilePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam/package-lock.json",
                          "entry": "/home/kosio/Documents/Softuni/aws/Regular_Exam/src/imageUploadFunction.ts",
                          "projectRoot": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                          "runtime": Runtime {
                            "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "family": 0,
                            "isVariable": false,
                            "name": "nodejs20.x",
                            "supportsCodeGuruProfiling": false,
                            "supportsInlineCode": true,
                            "supportsSnapStart": false,
                          },
                        },
                        "relativeDepsLockFilePath": "package-lock.json",
                        "relativeEntryPath": "src/imageUploadFunction.ts",
                        "securityOpt": undefined,
                        "user": undefined,
                        "volumes": undefined,
                        "volumesFrom": undefined,
                        "workingDirectory": "/",
                      },
                      "deployTime": true,
                      "exclude": [
                        ".is_custom_resource",
                      ],
                      "extraHash": undefined,
                      "follow": undefined,
                      "path": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                      "sourcePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                    },
                    "hashType": "output",
                    "isArchive": true,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Stage",
                      "scope": [Circular],
                    },
                    "packaging": "zip",
                    "sourcePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                    "sourceStats": Stats {
                      "atime": 2024-11-24T08:03:29.233Z,
                      "atimeMs": 1732435409233.4065,
                      "birthtime": 2024-11-24T07:13:04.487Z,
                      "birthtimeMs": 1732432384486.9697,
                      "blksize": 4096,
                      "blocks": 8,
                      "ctime": 2024-11-24T08:03:28.135Z,
                      "ctimeMs": 1732435408135.3765,
                      "dev": 66307,
                      "gid": 1000,
                      "ino": 7783402,
                      "mode": 16893,
                      "mtime": 2024-11-24T08:03:28.135Z,
                      "mtimeMs": 1732435408135.3765,
                      "nlink": 10,
                      "rdev": 0,
                      "size": 4096,
                      "uid": 1000,
                    },
                    "stagedPath": "/tmp/cdk.outdmAD4U/asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Code",
                "scope": [Circular],
              },
              "s3BucketName": "\${Token[TOKEN.27]}",
              "s3ObjectKey": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
              "s3ObjectUrl": "\${Token[TOKEN.28]}",
              "s3Url": "\${Token[TOKEN.26]}",
              "sourceHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "Resource": CfnFunction {
              "_cfnProperties": {
                "architectures": undefined,
                "code": {
                  "imageUri": undefined,
                  "s3Bucket": "\${Token[TOKEN.27]}",
                  "s3Key": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
                  "s3ObjectVersion": undefined,
                  "sourceKmsKeyArn": undefined,
                  "zipFile": undefined,
                },
                "codeSigningConfigArn": undefined,
                "deadLetterConfig": undefined,
                "description": undefined,
                "environment": "<unresolved-lazy>",
                "ephemeralStorage": undefined,
                "fileSystemConfigs": undefined,
                "functionName": "\${Token[TOKEN.15]}",
                "handler": "index.handler",
                "imageConfig": undefined,
                "kmsKeyArn": undefined,
                "layers": [
                  "#{Token[TOKEN.31]}",
                ],
                "loggingConfig": undefined,
                "memorySize": undefined,
                "packageType": undefined,
                "recursiveLoop": undefined,
                "reservedConcurrentExecutions": undefined,
                "role": "\${Token[TOKEN.23]}",
                "runtime": "nodejs20.x",
                "runtimeManagementConfig": undefined,
                "snapStart": undefined,
                "timeout": undefined,
                "vpcConfig": undefined,
              },
              "architectures": undefined,
              "attrArn": "\${Token[TOKEN.33]}",
              "attrSnapStartResponse": "<unresolved-token>",
              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.34]}",
              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.35]}",
              "cfnOptions": {},
              "cfnResourceType": "AWS::Lambda::Function",
              "code": {
                "imageUri": undefined,
                "s3Bucket": "\${Token[TOKEN.27]}",
                "s3Key": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
                "s3ObjectVersion": undefined,
                "sourceKmsKeyArn": undefined,
                "zipFile": undefined,
              },
              "codeSigningConfigArn": undefined,
              "deadLetterConfig": undefined,
              "dependsOn": Set {},
              "description": undefined,
              "environment": "<unresolved-lazy>",
              "ephemeralStorage": undefined,
              "fileSystemConfigs": undefined,
              "functionName": "\${Token[TOKEN.15]}",
              "handler": "index.handler",
              "imageConfig": undefined,
              "kmsKeyArn": undefined,
              "layers": [
                "#{Token[TOKEN.31]}",
              ],
              "loggingConfig": undefined,
              "logicalId": "\${Token[ApplicationStack.imageUploadFunction.Resource.LogicalID.32]}",
              "memorySize": undefined,
              "node": Node {
                "_children": {},
                "_context": {},
                "_dependencies": Set {
                  Role {
                    "_allowCrossEnvironment": false,
                    "_didSplit": false,
                    "_physicalName": undefined,
                    "_roleId": "\${Token[TOKEN.22]}",
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[lambda.amazonaws.com.17]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": [],
                    },
                    "dependables": Map {},
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": {},
                    "managedPolicies": [
                      AwsManagedPolicy {
                        "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                      },
                    ],
                    "node": Node {
                      "_children": {
                        "ImportServiceRole": ImportedRole {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": [],
                          },
                          "defaultPolicyName": undefined,
                          "env": {
                            "account": "\${Token[AWS.AccountId.7]}",
                            "region": "\${Token[AWS.Region.11]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "ImportServiceRole",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.18]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.7]}",
                          "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                          "roleName": "ServiceRole",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRole {
                          "_cfnProperties": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.17]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "description": undefined,
                            "managedPolicyArns": [
                              "#{Token[TOKEN.19]}",
                            ],
                            "maxSessionDuration": undefined,
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "roleName": "\${Token[TOKEN.16]}",
                          },
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.17]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attrArn": "\${Token[TOKEN.21]}",
                          "attrRoleId": "\${Token[TOKEN.22]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Role",
                          "dependsOn": Set {},
                          "description": undefined,
                          "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                          "managedPolicyArns": [
                            "#{Token[TOKEN.19]}",
                          ],
                          "maxSessionDuration": undefined,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "rawOverrides": {},
                          "roleName": "\${Token[TOKEN.16]}",
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::IAM::Role",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "ServiceRole",
                      "scope": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.16]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "\${Token[TOKEN.23]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.7]}",
                    "roleArn": "\${Token[TOKEN.23]}",
                    "roleName": "\${Token[TOKEN.25]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_locked": false,
                "_metadata": [
                  {
                    "data": "\${Token[ApplicationStack.imageUploadFunction.Resource.LogicalID.32]}",
                    "trace": undefined,
                    "type": "aws:cdk:logicalId",
                  },
                ],
                "_validations": [],
                "host": [Circular],
                "id": "Resource",
                "scope": [Circular],
              },
              "packageType": undefined,
              "rawOverrides": {},
              "recursiveLoop": undefined,
              "reservedConcurrentExecutions": undefined,
              "role": "\${Token[TOKEN.23]}",
              "runtime": "nodejs20.x",
              "runtimeManagementConfig": undefined,
              "snapStart": undefined,
              "stack": [Circular],
              "tags": TagManager {
                "didHaveInitialTags": false,
                "externalTagPriority": 50,
                "priorities": Map {},
                "renderedTags": "<unresolved-lazy>",
                "resourceTypeName": "AWS::Lambda::Function",
                "tagFormatter": StandardFormatter {},
                "tagPropertyName": "tags",
                "tags": Map {},
              },
              "tagsRaw": undefined,
              "timeout": undefined,
              "tracingConfig": undefined,
              "vpcConfig": undefined,
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "ServiceRole": Role {
              "_allowCrossEnvironment": false,
              "_didSplit": false,
              "_physicalName": undefined,
              "_roleId": "\${Token[TOKEN.22]}",
              "assumeRoleAction": "sts:AssumeRole",
              "assumeRolePolicy": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "\${Token[lambda.amazonaws.com.17]}",
                    },
                  },
                ],
                "Version": "2012-10-17",
              },
              "attachedPolicies": AttachedPolicies {
                "policies": [],
              },
              "dependables": Map {},
              "env": {
                "account": "\${Token[AWS.AccountId.7]}",
                "region": "\${Token[AWS.Region.11]}",
              },
              "grantPrincipal": [Circular],
              "inlinePolicies": {},
              "managedPolicies": [
                AwsManagedPolicy {
                  "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                },
              ],
              "node": Node {
                "_children": {
                  "ImportServiceRole": ImportedRole {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": [],
                    },
                    "defaultPolicyName": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "ImportServiceRole",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.18]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.7]}",
                    "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                    "roleName": "ServiceRole",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnRole {
                    "_cfnProperties": {
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.17]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "description": undefined,
                      "managedPolicyArns": [
                        "#{Token[TOKEN.19]}",
                      ],
                      "maxSessionDuration": undefined,
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "roleName": "\${Token[TOKEN.16]}",
                    },
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[lambda.amazonaws.com.17]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attrArn": "\${Token[TOKEN.21]}",
                    "attrRoleId": "\${Token[TOKEN.22]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::IAM::Role",
                    "dependsOn": Set {},
                    "description": undefined,
                    "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                    "managedPolicyArns": [
                      "#{Token[TOKEN.19]}",
                    ],
                    "maxSessionDuration": undefined,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "path": undefined,
                    "permissionsBoundary": undefined,
                    "policies": undefined,
                    "rawOverrides": {},
                    "roleName": "\${Token[TOKEN.16]}",
                    "stack": [Circular],
                    "tags": TagManager {
                      "didHaveInitialTags": false,
                      "externalTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::IAM::Role",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    "tagsRaw": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [
                  {
                    "validate": [Function],
                  },
                ],
                "host": [Circular],
                "id": "ServiceRole",
                "scope": [Circular],
              },
              "permissionsBoundary": undefined,
              "physicalName": "\${Token[TOKEN.16]}",
              "policyFragment": PrincipalPolicyFragment {
                "conditions": {},
                "principalJson": {
                  "AWS": [
                    "\${Token[TOKEN.23]}",
                  ],
                },
              },
              "principalAccount": "\${Token[AWS.AccountId.7]}",
              "roleArn": "\${Token[TOKEN.23]}",
              "roleName": "\${Token[TOKEN.25]}",
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
          },
          "_context": {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": [],
          "_validations": [],
          "host": [Circular],
          "id": "imageUploadFunction",
          "scope": [Circular],
        },
        "permissionsNode": Node {
          "_children": {
            "Code": Asset {
              "assetHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              "assetPath": "asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              "bucket": Import {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "autoCreatePolicy": false,
                "bucketArn": "arn:\${Token[AWS.Partition.10]}:s3:::\${Token[TOKEN.27]}",
                "bucketDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.URLSuffix.8]}",
                "bucketDualStackDomainName": "\${Token[TOKEN.27]}.s3.dualstack.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                "bucketName": "\${Token[TOKEN.27]}",
                "bucketRegionalDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                "bucketWebsiteDomainName": "\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                "bucketWebsiteNewUrlFormat": false,
                "bucketWebsiteUrl": "http://\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                "disallowPublicAccess": false,
                "encryptionKey": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.7]}",
                  "region": "\${Token[AWS.Region.11]}",
                },
                "isWebsite": false,
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "AssetBucket",
                  "scope": [Circular],
                },
                "notificationsHandlerRole": undefined,
                "physicalName": "\${Token[TOKEN.30]}",
                "policy": undefined,
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "httpUrl": "\${Token[TOKEN.26]}",
              "isBundled": true,
              "isFile": false,
              "isZipArchive": true,
              "node": Node {
                "_children": {
                  "AssetBucket": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "autoCreatePolicy": false,
                    "bucketArn": "arn:\${Token[AWS.Partition.10]}:s3:::\${Token[TOKEN.27]}",
                    "bucketDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.URLSuffix.8]}",
                    "bucketDualStackDomainName": "\${Token[TOKEN.27]}.s3.dualstack.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                    "bucketName": "\${Token[TOKEN.27]}",
                    "bucketRegionalDomainName": "\${Token[TOKEN.27]}.s3.\${Token[AWS.Region.11]}.\${Token[AWS.URLSuffix.8]}",
                    "bucketWebsiteDomainName": "\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                    "bucketWebsiteNewUrlFormat": false,
                    "bucketWebsiteUrl": "http://\${Token[TOKEN.27]}.\${Token[TOKEN.29]}",
                    "disallowPublicAccess": false,
                    "encryptionKey": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "isWebsite": false,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "AssetBucket",
                      "scope": [Circular],
                    },
                    "notificationsHandlerRole": undefined,
                    "physicalName": "\${Token[TOKEN.30]}",
                    "policy": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Stage": AssetStaging {
                    "absoluteStagedPath": "/tmp/cdk.outdmAD4U/asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    "assetHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    "assetOutdir": "/tmp/cdk.outdmAD4U",
                    "cacheKey": "d2ba75308608f5a80c4ce2d53d5a0551ba30e157e20641a8f665319255f3e856",
                    "customSourceFingerprint": undefined,
                    "fingerprintOptions": {
                      "assetHash": undefined,
                      "assetHashType": "output",
                      "bundling": Bundling {
                        "bundlingFileAccess": undefined,
                        "command": [
                          "bash",
                          "-c",
                          "esbuild --bundle "/asset-input/src/imageUploadFunction.ts" --target=node20 --platform=node --outfile="/asset-output/index.js" --external:@aws-sdk/*",
                        ],
                        "entrypoint": undefined,
                        "environment": undefined,
                        "externals": [
                          "@aws-sdk/*",
                        ],
                        "image": "dummy",
                        "local": {
                          "tryBundle": [Function],
                        },
                        "network": undefined,
                        "packageManager": PackageManager {
                          "argsSeparator": undefined,
                          "installCommand": [
                            "npm",
                            "ci",
                          ],
                          "lockFile": "package-lock.json",
                          "runCommand": [
                            "npx",
                            "--no-install",
                          ],
                        },
                        "projectRoot": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                        "props": {
                          "architecture": Architecture {
                            "dockerPlatform": "linux/amd64",
                            "name": "x86_64",
                          },
                          "depsLockFilePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam/package-lock.json",
                          "entry": "/home/kosio/Documents/Softuni/aws/Regular_Exam/src/imageUploadFunction.ts",
                          "projectRoot": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                          "runtime": Runtime {
                            "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
                            "family": 0,
                            "isVariable": false,
                            "name": "nodejs20.x",
                            "supportsCodeGuruProfiling": false,
                            "supportsInlineCode": true,
                            "supportsSnapStart": false,
                          },
                        },
                        "relativeDepsLockFilePath": "package-lock.json",
                        "relativeEntryPath": "src/imageUploadFunction.ts",
                        "securityOpt": undefined,
                        "user": undefined,
                        "volumes": undefined,
                        "volumesFrom": undefined,
                        "workingDirectory": "/",
                      },
                      "deployTime": true,
                      "exclude": [
                        ".is_custom_resource",
                      ],
                      "extraHash": undefined,
                      "follow": undefined,
                      "path": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                      "sourcePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                    },
                    "hashType": "output",
                    "isArchive": true,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Stage",
                      "scope": [Circular],
                    },
                    "packaging": "zip",
                    "sourcePath": "/home/kosio/Documents/Softuni/aws/Regular_Exam",
                    "sourceStats": Stats {
                      "atime": 2024-11-24T08:03:29.233Z,
                      "atimeMs": 1732435409233.4065,
                      "birthtime": 2024-11-24T07:13:04.487Z,
                      "birthtimeMs": 1732432384486.9697,
                      "blksize": 4096,
                      "blocks": 8,
                      "ctime": 2024-11-24T08:03:28.135Z,
                      "ctimeMs": 1732435408135.3765,
                      "dev": 66307,
                      "gid": 1000,
                      "ino": 7783402,
                      "mode": 16893,
                      "mtime": 2024-11-24T08:03:28.135Z,
                      "mtimeMs": 1732435408135.3765,
                      "nlink": 10,
                      "rdev": 0,
                      "size": 4096,
                      "uid": 1000,
                    },
                    "stagedPath": "/tmp/cdk.outdmAD4U/asset.bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Code",
                "scope": [Circular],
              },
              "s3BucketName": "\${Token[TOKEN.27]}",
              "s3ObjectKey": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
              "s3ObjectUrl": "\${Token[TOKEN.28]}",
              "s3Url": "\${Token[TOKEN.26]}",
              "sourceHash": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d",
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "Resource": CfnFunction {
              "_cfnProperties": {
                "architectures": undefined,
                "code": {
                  "imageUri": undefined,
                  "s3Bucket": "\${Token[TOKEN.27]}",
                  "s3Key": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
                  "s3ObjectVersion": undefined,
                  "sourceKmsKeyArn": undefined,
                  "zipFile": undefined,
                },
                "codeSigningConfigArn": undefined,
                "deadLetterConfig": undefined,
                "description": undefined,
                "environment": "<unresolved-lazy>",
                "ephemeralStorage": undefined,
                "fileSystemConfigs": undefined,
                "functionName": "\${Token[TOKEN.15]}",
                "handler": "index.handler",
                "imageConfig": undefined,
                "kmsKeyArn": undefined,
                "layers": [
                  "#{Token[TOKEN.31]}",
                ],
                "loggingConfig": undefined,
                "memorySize": undefined,
                "packageType": undefined,
                "recursiveLoop": undefined,
                "reservedConcurrentExecutions": undefined,
                "role": "\${Token[TOKEN.23]}",
                "runtime": "nodejs20.x",
                "runtimeManagementConfig": undefined,
                "snapStart": undefined,
                "timeout": undefined,
                "vpcConfig": undefined,
              },
              "architectures": undefined,
              "attrArn": "\${Token[TOKEN.33]}",
              "attrSnapStartResponse": "<unresolved-token>",
              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.34]}",
              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.35]}",
              "cfnOptions": {},
              "cfnResourceType": "AWS::Lambda::Function",
              "code": {
                "imageUri": undefined,
                "s3Bucket": "\${Token[TOKEN.27]}",
                "s3Key": "bb27966114312982518bf3ebe67c0b984b7357ad1663af40e8838b9fd498584d.zip",
                "s3ObjectVersion": undefined,
                "sourceKmsKeyArn": undefined,
                "zipFile": undefined,
              },
              "codeSigningConfigArn": undefined,
              "deadLetterConfig": undefined,
              "dependsOn": Set {},
              "description": undefined,
              "environment": "<unresolved-lazy>",
              "ephemeralStorage": undefined,
              "fileSystemConfigs": undefined,
              "functionName": "\${Token[TOKEN.15]}",
              "handler": "index.handler",
              "imageConfig": undefined,
              "kmsKeyArn": undefined,
              "layers": [
                "#{Token[TOKEN.31]}",
              ],
              "loggingConfig": undefined,
              "logicalId": "\${Token[ApplicationStack.imageUploadFunction.Resource.LogicalID.32]}",
              "memorySize": undefined,
              "node": Node {
                "_children": {},
                "_context": {},
                "_dependencies": Set {
                  Role {
                    "_allowCrossEnvironment": false,
                    "_didSplit": false,
                    "_physicalName": undefined,
                    "_roleId": "\${Token[TOKEN.22]}",
                    "assumeRoleAction": "sts:AssumeRole",
                    "assumeRolePolicy": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[lambda.amazonaws.com.17]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attachedPolicies": AttachedPolicies {
                      "policies": [],
                    },
                    "dependables": Map {},
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "grantPrincipal": [Circular],
                    "inlinePolicies": {},
                    "managedPolicies": [
                      AwsManagedPolicy {
                        "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                      },
                    ],
                    "node": Node {
                      "_children": {
                        "ImportServiceRole": ImportedRole {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": [],
                          },
                          "defaultPolicyName": undefined,
                          "env": {
                            "account": "\${Token[AWS.AccountId.7]}",
                            "region": "\${Token[AWS.Region.11]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "ImportServiceRole",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.18]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.7]}",
                          "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                          "roleName": "ServiceRole",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRole {
                          "_cfnProperties": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.17]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "description": undefined,
                            "managedPolicyArns": [
                              "#{Token[TOKEN.19]}",
                            ],
                            "maxSessionDuration": undefined,
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "roleName": "\${Token[TOKEN.16]}",
                          },
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.17]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attrArn": "\${Token[TOKEN.21]}",
                          "attrRoleId": "\${Token[TOKEN.22]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Role",
                          "dependsOn": Set {},
                          "description": undefined,
                          "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                          "managedPolicyArns": [
                            "#{Token[TOKEN.19]}",
                          ],
                          "maxSessionDuration": undefined,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "rawOverrides": {},
                          "roleName": "\${Token[TOKEN.16]}",
                          "stack": [Circular],
                          "tags": TagManager {
                            "didHaveInitialTags": false,
                            "externalTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::IAM::Role",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "tagsRaw": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "ServiceRole",
                      "scope": [Circular],
                    },
                    "permissionsBoundary": undefined,
                    "physicalName": "\${Token[TOKEN.16]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "\${Token[TOKEN.23]}",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.7]}",
                    "roleArn": "\${Token[TOKEN.23]}",
                    "roleName": "\${Token[TOKEN.25]}",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_locked": false,
                "_metadata": [
                  {
                    "data": "\${Token[ApplicationStack.imageUploadFunction.Resource.LogicalID.32]}",
                    "trace": undefined,
                    "type": "aws:cdk:logicalId",
                  },
                ],
                "_validations": [],
                "host": [Circular],
                "id": "Resource",
                "scope": [Circular],
              },
              "packageType": undefined,
              "rawOverrides": {},
              "recursiveLoop": undefined,
              "reservedConcurrentExecutions": undefined,
              "role": "\${Token[TOKEN.23]}",
              "runtime": "nodejs20.x",
              "runtimeManagementConfig": undefined,
              "snapStart": undefined,
              "stack": [Circular],
              "tags": TagManager {
                "didHaveInitialTags": false,
                "externalTagPriority": 50,
                "priorities": Map {},
                "renderedTags": "<unresolved-lazy>",
                "resourceTypeName": "AWS::Lambda::Function",
                "tagFormatter": StandardFormatter {},
                "tagPropertyName": "tags",
                "tags": Map {},
              },
              "tagsRaw": undefined,
              "timeout": undefined,
              "tracingConfig": undefined,
              "vpcConfig": undefined,
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "ServiceRole": Role {
              "_allowCrossEnvironment": false,
              "_didSplit": false,
              "_physicalName": undefined,
              "_roleId": "\${Token[TOKEN.22]}",
              "assumeRoleAction": "sts:AssumeRole",
              "assumeRolePolicy": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "\${Token[lambda.amazonaws.com.17]}",
                    },
                  },
                ],
                "Version": "2012-10-17",
              },
              "attachedPolicies": AttachedPolicies {
                "policies": [],
              },
              "dependables": Map {},
              "env": {
                "account": "\${Token[AWS.AccountId.7]}",
                "region": "\${Token[AWS.Region.11]}",
              },
              "grantPrincipal": [Circular],
              "inlinePolicies": {},
              "managedPolicies": [
                AwsManagedPolicy {
                  "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                },
              ],
              "node": Node {
                "_children": {
                  "ImportServiceRole": ImportedRole {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": [],
                    },
                    "defaultPolicyName": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.7]}",
                      "region": "\${Token[AWS.Region.11]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "ImportServiceRole",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.18]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.7]}",
                    "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                    "roleName": "ServiceRole",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnRole {
                    "_cfnProperties": {
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.17]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "description": undefined,
                      "managedPolicyArns": [
                        "#{Token[TOKEN.19]}",
                      ],
                      "maxSessionDuration": undefined,
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "roleName": "\${Token[TOKEN.16]}",
                    },
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[lambda.amazonaws.com.17]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attrArn": "\${Token[TOKEN.21]}",
                    "attrRoleId": "\${Token[TOKEN.22]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::IAM::Role",
                    "dependsOn": Set {},
                    "description": undefined,
                    "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                    "managedPolicyArns": [
                      "#{Token[TOKEN.19]}",
                    ],
                    "maxSessionDuration": undefined,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "path": undefined,
                    "permissionsBoundary": undefined,
                    "policies": undefined,
                    "rawOverrides": {},
                    "roleName": "\${Token[TOKEN.16]}",
                    "stack": [Circular],
                    "tags": TagManager {
                      "didHaveInitialTags": false,
                      "externalTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::IAM::Role",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    "tagsRaw": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [
                  {
                    "validate": [Function],
                  },
                ],
                "host": [Circular],
                "id": "ServiceRole",
                "scope": [Circular],
              },
              "permissionsBoundary": undefined,
              "physicalName": "\${Token[TOKEN.16]}",
              "policyFragment": PrincipalPolicyFragment {
                "conditions": {},
                "principalJson": {
                  "AWS": [
                    "\${Token[TOKEN.23]}",
                  ],
                },
              },
              "principalAccount": "\${Token[AWS.AccountId.7]}",
              "roleArn": "\${Token[TOKEN.23]}",
              "roleName": "\${Token[TOKEN.25]}",
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
          },
          "_context": {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": [],
          "_validations": [],
          "host": [Circular],
          "id": "imageUploadFunction",
          "scope": [Circular],
        },
        "physicalName": "\${Token[TOKEN.15]}",
        "role": Role {
          "_allowCrossEnvironment": false,
          "_didSplit": false,
          "_physicalName": undefined,
          "_roleId": "\${Token[TOKEN.22]}",
          "assumeRoleAction": "sts:AssumeRole",
          "assumeRolePolicy": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "\${Token[lambda.amazonaws.com.17]}",
                },
              },
            ],
            "Version": "2012-10-17",
          },
          "attachedPolicies": AttachedPolicies {
            "policies": [],
          },
          "dependables": Map {},
          "env": {
            "account": "\${Token[AWS.AccountId.7]}",
            "region": "\${Token[AWS.Region.11]}",
          },
          "grantPrincipal": [Circular],
          "inlinePolicies": {},
          "managedPolicies": [
            AwsManagedPolicy {
              "managedPolicyArn": "arn:\${Token[AWS.Partition.10]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            },
          ],
          "node": Node {
            "_children": {
              "ImportServiceRole": ImportedRole {
                "_allowCrossEnvironment": false,
                "_physicalName": undefined,
                "assumeRoleAction": "sts:AssumeRole",
                "attachedPolicies": AttachedPolicies {
                  "policies": [],
                },
                "defaultPolicyName": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.7]}",
                  "region": "\${Token[AWS.Region.11]}",
                },
                "grantPrincipal": [Circular],
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "ImportServiceRole",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.18]}",
                "policyFragment": PrincipalPolicyFragment {
                  "conditions": {},
                  "principalJson": {
                    "AWS": [
                      "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                    ],
                  },
                },
                "principalAccount": "\${Token[AWS.AccountId.7]}",
                "roleArn": "arn:\${Token[AWS.Partition.10]}:iam::\${Token[AWS.AccountId.7]}:role",
                "roleName": "ServiceRole",
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "Resource": CfnRole {
                "_cfnProperties": {
                  "assumeRolePolicyDocument": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.17]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "description": undefined,
                  "managedPolicyArns": [
                    "#{Token[TOKEN.19]}",
                  ],
                  "maxSessionDuration": undefined,
                  "path": undefined,
                  "permissionsBoundary": undefined,
                  "policies": undefined,
                  "roleName": "\${Token[TOKEN.16]}",
                },
                "assumeRolePolicyDocument": {
                  "Statement": [
                    {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "\${Token[lambda.amazonaws.com.17]}",
                      },
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "attrArn": "\${Token[TOKEN.21]}",
                "attrRoleId": "\${Token[TOKEN.22]}",
                "cfnOptions": {},
                "cfnResourceType": "AWS::IAM::Role",
                "dependsOn": Set {},
                "description": undefined,
                "logicalId": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                "managedPolicyArns": [
                  "#{Token[TOKEN.19]}",
                ],
                "maxSessionDuration": undefined,
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [
                    {
                      "data": "\${Token[ApplicationStack.imageUploadFunction.ServiceRole.Resource.LogicalID.20]}",
                      "trace": undefined,
                      "type": "aws:cdk:logicalId",
                    },
                  ],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Resource",
                  "scope": [Circular],
                },
                "path": undefined,
                "permissionsBoundary": undefined,
                "policies": undefined,
                "rawOverrides": {},
                "roleName": "\${Token[TOKEN.16]}",
                "stack": [Circular],
                "tags": TagManager {
                  "didHaveInitialTags": false,
                  "externalTagPriority": 50,
                  "priorities": Map {},
                  "renderedTags": "<unresolved-lazy>",
                  "resourceTypeName": "AWS::IAM::Role",
                  "tagFormatter": StandardFormatter {},
                  "tagPropertyName": "tags",
                  "tags": Map {},
                },
                "tagsRaw": undefined,
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
            },
            "_context": {},
            "_dependencies": Set {},
            "_locked": false,
            "_metadata": [],
            "_validations": [
              {
                "validate": [Function],
              },
            ],
            "host": [Circular],
            "id": "ServiceRole",
            "scope": [Circular],
          },
          "permissionsBoundary": undefined,
          "physicalName": "\${Token[TOKEN.16]}",
          "policyFragment": PrincipalPolicyFragment {
            "conditions": {},
            "principalJson": {
              "AWS": [
                "\${Token[TOKEN.23]}",
              ],
            },
          },
          "principalAccount": "\${Token[AWS.AccountId.7]}",
          "roleArn": "\${Token[TOKEN.23]}",
          "roleName": "\${Token[TOKEN.25]}",
          "stack": [Circular],
          Symbol(@aws-cdk/core.DependableTrait): {
            "dependencyRoots": [
              [Circular],
            ],
          },
        },
        "runtime": Runtime {
          "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs20.x",
          "bundlingImage": "public.ecr.aws/sam/build-nodejs20.x",
          "family": 0,
          "isVariable": false,
          "name": "nodejs20.x",
          "supportsCodeGuruProfiling": false,
          "supportsInlineCode": true,
          "supportsSnapStart": false,
        },
        "stack": [Circular],
        "timeout": undefined,
        Symbol(@aws-cdk/core.DependableTrait): {
          "dependencyRoots": [
            [Circular],
          ],
        },
      },
    },
    "_context": {},
    "_dependencies": Set {},
    "_locked": false,
    "_metadata": [],
    "_validations": [],
    "host": [Circular],
    "id": "ApplicationStack",
    "scope": App {
      "_assemblyBuilder": CloudAssemblyBuilder {
        "artifacts": {},
        "assetOutdir": "/tmp/cdk.outdmAD4U",
        "missing": [],
        "outdir": "/tmp/cdk.outdmAD4U",
        "parentBuilder": undefined,
      },
      "_treeMetadata": true,
      "account": undefined,
      "constructPathsCache": Set {},
      "node": Node {
        "_children": {
          "ApplicationStack": [Circular],
        },
        "_context": {},
        "_dependencies": Set {},
        "_locked": false,
        "_metadata": [],
        "_validations": [],
        "host": [Circular],
        "id": "",
        "scope": undefined,
      },
      "parentStage": undefined,
      "policyValidationBeta1": [],
      "region": undefined,
      "stageName": "",
      Symbol(@aws-cdk/core.DependableTrait): {
        "dependencyRoots": [
          [Circular],
        ],
      },
    },
  },
  "region": "\${Token[AWS.Region.11]}",
  "synthesizer": DefaultStackSynthesizer {
    "_boundStack": [Circular],
    "_cloudFormationExecutionRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-\${AWS::AccountId}-\${AWS::Region}",
    "_deployRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-\${AWS::AccountId}-\${AWS::Region}",
    "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
    "bucketName": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
    "bucketPrefix": "",
    "dockerTagPrefix": "",
    "fileAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
    "imageAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-image-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
    "lookupRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-\${AWS::AccountId}-\${AWS::Region}",
    "qualifier": "hnb659fds",
    "repositoryName": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
  },
  "tags": TagManager {
    "didHaveInitialTags": false,
    "externalTagPriority": 50,
    "priorities": Map {},
    "renderedTags": "<unresolved-lazy>",
    "resourceTypeName": "aws:cdk:stack",
    "tagFormatter": KeyValueFormatter {},
    "tagPropertyName": "tags",
    "tags": Map {},
  },
  "templateFile": "ApplicationStack.template.json",
  "templateOptions": {},
  Symbol(@aws-cdk/core.DependableTrait): {
    "dependencyRoots": [
      [Circular],
    ],
  },
}
`;
